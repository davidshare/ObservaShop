services:
  prometheus:
    image: prom/prometheus:v3.5.0
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./observability/prometheus/rules.yml:/etc/prometheus/rules.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - observashop-network
  grafana:
    image: grafana/grafana:12.1.1
    volumes:
      - ./observability/grafana/custom.ini:/etc/grafana/custom.ini:ro
      - ./observability/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - observashop-network
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-your_secure_password}
      - GF_USERS_ALLOW_SIGN_UP=true
  loki:
    image: grafana/loki:3.5.4
    volumes:
      - ./observability/loki/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki-data:/loki
    ports:
      - "3100:3100"
    networks:
      - observashop-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:3100/ready",
        ]
      interval: 10s
      retries: 3
      timeout: 3s
  promtail:
    image: grafana/promtail:3.5.4
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./observability/loki/promtail-config.yaml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro # For docker_sd_configs
    command: ["-config.file=/etc/promtail/config.yml"]
    networks:
      - observashop-network
    depends_on:
      loki:
        condition: service_healthy # Wait for Loki health
    restart: unless-stopped # Prod resilience
  alert-manager:
    image: prom/alertmanager:v0.28.1
    volumes:
      - "./observability/alertmanager/alertmanager.yml:/alertmanager/alertmanager.yml"
    networks:
      - observashop-network
    ports:
      - 9093:9093
  tempo:
    image: grafana/tempo:2.8.2
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./observability/tempo/tempo.yaml:/etc/tempo.yaml
      - tempo-data:/var/tempo
    ports:
      - "3200:3200"
      - "4327:4317"
      - "4328:4318"
    networks:
      - observashop-network
  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./observability/otel/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "8889:8889" # Prometheus metrics (app metrics)
    networks:
      - observashop-network
  node-exporter:
    image: prom/node-exporter:v1.9.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
    ports:
      - "9100:9100"
    networks:
      - observashop-network
  postgres-exporter-auth:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      - DATA_SOURCE_URI=${POSTGRES_DATA_SOURCE_URI_AUTH}
      - DATA_SOURCE_USER=${POSTGRES_MONITOR_USER}
      - DATA_SOURCE_PASS=${POSTGRES_MONITOR_PASSWORD}
    ports:
      - "9110:9187"
    networks:
      - observashop-network
  postgres-exporter-authz:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      - DATA_SOURCE_URI=${POSTGRES_DATA_SOURCE_URI_AUTHZ}
      - DATA_SOURCE_USER=${POSTGRES_MONITOR_USER}
      - DATA_SOURCE_PASS=${POSTGRES_MONITOR_PASSWORD}
    ports:
      - "9111:9187"
    networks:
      - observashop-network
  postgres-exporter-product:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      - DATA_SOURCE_URI=${POSTGRES_DATA_SOURCE_URI_PRODUCT}
      - DATA_SOURCE_USER=${POSTGRES_MONITOR_USER}
      - DATA_SOURCE_PASS=${POSTGRES_MONITOR_PASSWORD}
    ports:
      - "9112:9187"
    networks:
      - observashop-network
  postgres-exporter-order:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      - DATA_SOURCE_URI=${POSTGRES_DATA_SOURCE_URI_ORDER}
      - DATA_SOURCE_USER=${POSTGRES_MONITOR_USER}
      - DATA_SOURCE_PASS=${POSTGRES_MONITOR_PASSWORD}
    ports:
      - "9113:9187"
    networks:
      - observashop-network
  postgres-exporter-payment:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      - DATA_SOURCE_URI=${POSTGRES_DATA_SOURCE_URI_PAYMENT}
      - DATA_SOURCE_USER=${POSTGRES_MONITOR_USER}
      - DATA_SOURCE_PASS=${POSTGRES_MONITOR_PASSWORD}
    ports:
      - "9114:9187"
    networks:
      - observashop-network
  postgres-exporter-media:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      - DATA_SOURCE_URI=${POSTGRES_DATA_SOURCE_URI_MEDIA}
      - DATA_SOURCE_USER=${POSTGRES_MONITOR_USER}
      - DATA_SOURCE_PASS=${POSTGRES_MONITOR_PASSWORD}
    ports:
      - "9115:9187"
    networks:
      - observashop-network
  postgres-exporter-notification:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      - DATA_SOURCE_URI=${POSTGRES_DATA_SOURCE_URI_NOTIFICATION}
      - DATA_SOURCE_USER=${POSTGRES_MONITOR_USER}
      - DATA_SOURCE_PASS=${POSTGRES_MONITOR_PASSWORD}
    ports:
      - "9116:9187"
    networks:
      - observashop-network
  postgres-exporter-analytics:
    image: prometheuscommunity/postgres-exporter:v0.17.1
    environment:
      - DATA_SOURCE_URI=${POSTGRES_DATA_SOURCE_URI_ANALYTICS}
      - DATA_SOURCE_USER=${POSTGRES_MONITOR_USER}
      - DATA_SOURCE_PASS=${POSTGRES_MONITOR_PASSWORD}
    ports:
      - "9117:9187"
    networks:
      - observashop-network
  redis-exporter:
    image: oliver006/redis_exporter:v1.76.0
    environment:
      - REDIS_ADDR=redis:6379
      # Optional: If your Redis requires authentication
      # - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "9121:9121"
    networks:
      - observashop-network
  kafka-exporter:
    image: danielqsj/kafka-exporter:v1.9.0
    environment:
      - KAFKA_BROKERS=kafka:9092
    ports:
      - "9308:9308"
    networks:
      - observashop-network
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - observashop-network
volumes:
  prometheus-data:
  grafana-data:
  loki-data:
  tempo-data:
networks:
  observashop-network:
    external: true
    name: observashop_observashop-network
